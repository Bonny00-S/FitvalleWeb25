@{
    Layout = ViewBag.Rol;
    ViewData["Title"] = "Cambio de contraseña";
}

<div class="min-h-screen flex items-center justify-center bg-white">
    <div class="bg-[#6B0F1A] text-white rounded-2xl shadow-2xl w-full max-w-md p-8">
        <h2 class="text-2xl font-bold text-center mb-6">Cambio de Contraseña</h2>

        <form asp-action="ChangePassword" method="post" class="space-y-5">
            @Html.AntiForgeryToken()

            <!-- Nueva contraseña -->
            <div>
                <label for="newPassword" class="block text-sm font-medium mb-1">
                    Nueva contraseña
                </label>
                <input type="password" name="newPassword" id="newPassword" required
                       class="w-full px-3 py-2 rounded-md border border-gray-300 text-gray-800 focus:outline-none focus:ring-2 focus:ring-[#6B0F1A]" />

                <ul class="text-sm mt-2 space-y-1 text-gray-200">
                    <li id="reqLength">• Al menos 6 caracteres</li>
                    <li id="reqUpper">• Una letra mayúscula</li>
                    <li id="reqLower">• Una letra minúscula</li>
                    <li id="reqNumber">• Un número</li>
                    <li id="reqSpecial">• Un carácter especial (!#$%^&*)</li>
                </ul>
            </div>

            <!-- Confirmar contraseña -->
            <div>
                <label for="confirmPassword" class="block text-sm font-medium mb-1">
                    Confirmar nueva contraseña
                </label>
                <input type="password" name="confirmPassword" id="confirmPassword" required
                       class="w-full px-3 py-2 rounded-md border border-gray-300 text-gray-800 focus:outline-none focus:ring-2 focus:ring-[#6B0F1A]" />
                <span id="matchError" class="text-red-300 text-sm hidden">
                    Las contraseñas no coinciden.
                </span>
            </div>

            <!-- Botones -->
            <div class="flex justify-between items-center pt-4">
                <a href="/dashboard" class="text-sm text-gray-200 hover:text-white transition">Cancelar</a>
                <button type="submit" id="btnSubmit" disabled
                        class="bg-white text-[#6B0F1A] font-semibold px-5 py-2 rounded-md transition disabled:opacity-50 hover:bg-gray-100">
                    Cambiar contraseña
                </button>
            </div>

            <div asp-validation-summary="All" class="text-sm text-yellow-100 mt-3"></div>
        </form>
    </div>
</div>

<!-- Modal de éxito -->
@if (ViewBag.Success != null)
{
    <div id="successModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-xl p-6 max-w-sm text-center shadow-lg">
            <h3 class="text-lg font-bold text-[#6B0F1A] mb-4">¡Éxito!</h3>
            <p class="text-gray-700 mb-6">@ViewBag.Success</p>

            @if (ViewBag.RolDashboard == "admin")
            {
                <a asp-action="Dashboard" asp-controller="Admin"
                   class="bg-[#6B0F1A] text-white px-5 py-2 rounded-md hover:bg-[#500b14] transition inline-block">
                    Aceptar
                </a>
            }
            else
            {
                <a asp-action="Dashboard" asp-controller="Coach"
                   class="bg-[#6B0F1A] text-white px-5 py-2 rounded-md hover:bg-[#500b14] transition inline-block">
                    Aceptar
                </a>
            }

        </div>
    </div>
}


@section Scripts {
    <script>
        const newPass = document.getElementById("newPassword");
        const confirmPass = document.getElementById("confirmPassword");
        const submitBtn = document.getElementById("btnSubmit");
        const matchError = document.getElementById("matchError");

        const rules = {
            reqLength: val => val.length >= 6,
            reqUpper: val => /[A-Z]/.test(val),
            reqLower: val => /[a-z]/.test(val),
            reqNumber: val => /\d/.test(val),
            reqSpecial: val => /[\W_]/.test(val)
        };

        function validatePassword() {
            const val = newPass.value;
            const conf = confirmPass.value;

            Object.entries(rules).forEach(([id, test]) => {
                const el = document.getElementById(id);
                el.classList.toggle("text-green-300", test(val));
                el.classList.toggle("text-gray-200", !test(val));
            });

            const valid = Object.values(rules).every(fn => fn(val)) && val === conf;
            matchError.classList.toggle("hidden", !(val && conf && val !== conf));
            submitBtn.disabled = !valid;
        }

        newPass.addEventListener("input", validatePassword);
        confirmPass.addEventListener("input", validatePassword);

    
     
    </script>
}
