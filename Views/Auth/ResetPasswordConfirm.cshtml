@{
    ViewData["Title"] = "Restablecer contraseña";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>

    <!-- ✅ TailwindCSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-900 via-black to-gray-800 p-6 text-white">

    <div class="w-full max-w-md bg-gray-900 bg-opacity-70 backdrop-blur-md rounded-2xl shadow-2xl p-8">
        <h2 class="text-center text-2xl font-bold text-indigo-400 mb-6">
            Restablecer contraseña
        </h2>

        @if (ViewBag.Success != null)
        {
            <div class="bg-green-600 text-white text-center py-2 rounded-lg mb-4 shadow-md">
                @ViewBag.Success
            </div>
        }

        <form asp-action="ResetPasswordConfirm" method="post" class="space-y-5">
            @Html.AntiForgeryToken()

            <input type="hidden" name="oobCode" value="@ViewBag.OobCode" />

            <div>
                <label class="block font-semibold mb-2">Nueva contraseña</label>
                <input type="password" name="newPassword" id="newPassword"
                       class="w-full p-3 rounded-lg bg-gray-800 text-white focus:ring-2 focus:ring-indigo-500 outline-none"
                       required />
                <ul class="text-sm mt-2 space-y-1">
                    <li id="reqLength" class="text-red-400">• Al menos 6 caracteres</li>
                    <li id="reqUpper" class="text-red-400">• Una letra mayúscula</li>
                    <li id="reqLower" class="text-red-400">• Una letra minúscula</li>
                    <li id="reqNumber" class="text-red-400">• Un número</li>
                    <li id="reqSpecial" class="text-red-400">• Un carácter especial (!$%^&*)</li>
                </ul>
            </div>

            <div>
                <label class="block font-semibold mb-2">Confirmar nueva contraseña</label>
                <input type="password" name="confirmPassword" id="confirmPassword"
                       class="w-full p-3 rounded-lg bg-gray-800 text-white focus:ring-2 focus:ring-indigo-500 outline-none"
                       required />
                <small id="matchError" class="text-red-400 hidden">Las contraseñas no coinciden.</small>
            </div>

            <button type="submit" id="btnSubmit"
                    class="w-full py-3 bg-indigo-600 hover:bg-indigo-700 transition rounded-lg font-semibold disabled:opacity-50 disabled:cursor-not-allowed"
                    disabled>
                Confirmar nueva contraseña
            </button>

            <div asp-validation-summary="All" class="text-red-400 mt-3 text-sm"></div>
        </form>
    </div>

    <!-- ✅ Modal de éxito oculto inicialmente -->
    <div id="successModal" class="fixed inset-0 hidden bg-black bg-opacity-70 flex items-center justify-center z-50">
        <div class="bg-gray-900 rounded-2xl shadow-xl p-8 text-center max-w-sm w-full">
            <h3 class="text-2xl font-bold text-green-400 mb-3">¡Contraseña actualizada!</h3>
            <p class="text-gray-300 mb-6">Tu contraseña se cambió exitosamente.</p>
            <button id="btnAccept"
                    class="bg-indigo-600 hover:bg-indigo-700 px-6 py-2 rounded-lg font-semibold transition">
                Aceptar
            </button>
        </div>
    </div>

    @section Scripts {
        <script>
            const newPass = document.getElementById("newPassword");
            const confirmPass = document.getElementById("confirmPassword");
            const submitBtn = document.getElementById("btnSubmit");

            const reqs = {
                length: document.getElementById("reqLength"),
                upper: document.getElementById("reqUpper"),
                lower: document.getElementById("reqLower"),
                number: document.getElementById("reqNumber"),
                special: document.getElementById("reqSpecial"),
                match: document.getElementById("matchError")
            };

            function validatePassword() {
                const val = newPass.value;
                const conf = confirmPass.value;

                const valid = {
                    length: val.length >= 6,
                    upper: /[A-Z]/.test(val),
                    lower: /[a-z]/.test(val),
                    number: /\d/.test(val),
                    special: /[\W_]/.test(val),
                    match: val && conf && val === conf
                };

                for (const key of ["length", "upper", "lower", "number", "special"]) {
                    reqs[key].classList.toggle("text-green-400", valid[key]);
                    reqs[key].classList.toggle("text-red-400", !valid[key]);
                }

                reqs.match.classList.toggle("hidden", valid.match || !conf);
                reqs.match.classList.toggle("text-red-400", !valid.match && conf);

                const allValid = Object.values(valid).every(Boolean);
                submitBtn.disabled = !allValid;
            }

            newPass.addEventListener("input", validatePassword);
            confirmPass.addEventListener("input", validatePassword);

            // ✅ Si la operación fue exitosa desde el servidor, mostrar modal
            @if (ViewBag.Success != null)
            {
                <text>
                    window.addEventListener("DOMContentLoaded", () => {
                        document.getElementById("successModal").classList.remove("hidden");
                    });
                </text>
            }

                // ✅ Redirige al login al presionar "Aceptar"
                document.getElementById("btnAccept")?.addEventListener("click", () => {
                    window.location.href = "/Auth/Login";
                });
        </script>
    }
</body>
</html>
